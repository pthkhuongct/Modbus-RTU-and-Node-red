module.exports=function(t){require("source-map-support").install();var o=require("./modbus-basics"),i=require("debug")("contribModbus:flex:connector");t.nodes.registerType("modbus-flex-connector",function(e){t.nodes.createNode(this,e),this.name=e.name,this.maxReconnectsPerMinute=e.maxReconnectsPerMinute||4,this.emptyQueue=e.emptyQueue,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.connection=null,this.internalDebugLog=i,this.verboseLogging=t.settings.verbose,this.server=t.nodes.getNode(e.server);var s=this;o.setNodeStatusTo("waiting",s),this.server&&(this.server.registerForModbus(s),o.initModbusClientEvents(s,this.server),s.onConfigDone=function(e){var t=s.showStatusActivities;t&&o.setNodeStatusTo("config done",s),t&&o.setNodeStatusTo(this.server.actualServiceState,s),t||o.setNodeDefaultStatus(s),e.error.nodeStatus=s.statusText,s.emptyMsgOnFail&&(e.payload=""),s.send(e)},s.on("input",function(e){var t;o.invalidPayloadIn(e)||(s.showStatusActivities&&o.setNodeStatusTo(this.server.actualServiceState,s),e.payload.connectorType?(i("dynamicReconnect: ".concat(JSON.stringify(e.payload))),e.payload.emptyQueue=s.emptyQueue,this.server.emit("dynamicReconnect",e,s.onConfigDone,s.onConfigError)):(t=new Error("Payload Not Valid - Connector Type"),s.error(t,e),s.send(e)))}),s.showStatusActivities||o.setNodeDefaultStatus(s))})};
//# sourceMappingURL=maps/modbus-flex-connector.js.map
